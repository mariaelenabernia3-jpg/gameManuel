// ****** ZONA DE CONFIGURACIÓN DEL MODO INFINITO ******
const missionData = {
    isInfinite: true,
    title: "Modo Infinito",
    lore: "Sobrevive el mayor tiempo posible contra oleadas interminables de enemigos y jefes cada vez más poderosos. No hay escapatoria, solo la gloria de un nuevo récord. ¡Demuestra cuánto puedes resistir!"
};
// ****** FIN DE LA ZONA DE CONFIGURACIÓN ******

// =============================================================
//          MOTOR DEL JUEGO (CÓDIGO FINAL Y CORREGIDO)
// =============================================================
const canvas=document.getElementById("gameCanvas"),ctx=canvas.getContext("2d"),GAME_SETTINGS_KEY="aceCraftGameSettings",CAMPAIGN_HIGH_SCORES_KEY="aceCraftCampaignHighScores",INFINITE_HIGH_SCORES_KEY="aceCraftInfiniteHighScores";let score=0,isPaused=!0,isGameOver=!1,difficultyMultiplier=1,coinMultiplier=1,activeControl="none",level=1,stars=[],combo={count:0,multiplier:1,timer:0},entityArrays={bossProjectiles:[],playerBullets:[],explosions:[],minions:[],powerUps:[],minionProjectiles:[],companionBullets:[],effects:[]},companion=null;
let lastMinionSpawn={standard:0,fast:0,tank:0};

function loadImage(e){const t=new Image;return t.src=e,t}
const sprites={playerShips:{interceptor:loadImage("assets/nave.png"),vanguard:loadImage("assets/nave2.png"),striker:loadImage("assets/nave3.png")},player:null,bosses:[loadImage("assets/Boss1.png"),loadImage("assets/Boss2.png"),loadImage("assets/Boss3.png")],powerUps:{tripleShot:loadImage("assets/powerup_triple.png"),shield:loadImage("assets/powerup_shield.png"),health:loadImage("assets/powerup_health.png"),companion:loadImage("assets/powerup_companion.png")},companionDrone:loadImage("assets/drone.png"),minion:loadImage("assets/Enemy.png"),healer:loadImage("assets/curador.png"),backgrounds:[loadImage("assets/fondo1.png"),loadImage("assets/fondo2.png")]},sounds={shoot:new Audio("assets/hitHurt.wav"),explosion:new Audio("assets/explosion.wav")};let currentBackground=null;function playSound(e){try{e.cloneNode().play()}catch(e){}}const shipsData={interceptor:{name:"Interceptor",firePattern:"single",baseDamage:10,baseSpeed:5,baseShootInterval:450,baseHealth:100,upgrades:{damage:2,firerate:-20}},vanguard:{name:"Vanguard",firePattern:"spread",baseDamage:7,baseSpeed:4.5,baseShootInterval:500,baseHealth:75,upgrades:{damage:2,spread:.05}},striker:{name:"Striker",firePattern:"side",baseDamage:12,baseSpeed:4,baseShootInterval:480,baseHealth:100,upgrades:{mainDamage:3,sideDamage:2}}};let player={},boss={};
const bosses=[{name:"Guardián",sprite:sprites.bosses[0],width:140,height:70,attackPattern:"burst",phaseTwoAttack:"spiral",minionSpawnInterval:8e3,healerSpawnInterval:14e3},{name:"Invasor",sprite:sprites.bosses[1],width:120,height:80,attackPattern:"shotgun",phaseTwoAttack:"walls",minionSpawnInterval:7e3,healerSpawnInterval:12e3},{name:"Depredador",sprite:sprites.bosses[2],width:150,height:60,attackPattern:"homing",phaseTwoAttack:"laserSweep",minionSpawnInterval:9e3,healerSpawnInterval:15e3}],PLAYER_PROGRESS_KEY="aceCraftPlayerProgress";
function getSanitizedPlayerProgress(){const e={currency:0,selectedShip:"interceptor",unlockedShips:["interceptor"],shipUpgrades:{interceptor:{},vanguard:{},striker:{}}};let t;try{const a=localStorage.getItem(PLAYER_PROGRESS_KEY);t=a?JSON.parse(a):e,"object"!=typeof t||null===t?t=e:void 0}catch(e){t=e}return t.currency="number"==typeof t.currency?t.currency:0,t.unlockedShips=Array.isArray(t.unlockedShips)?t.unlockedShips:["interceptor"],t.shipUpgrades=t.shipUpgrades||{},Object.keys(shipsData).forEach(e=>{t.shipUpgrades[e]||(t.shipUpgrades[e]={})}),t.unlockedShips.includes(t.selectedShip)||(t.selectedShip="interceptor"),t}
function initializeGame(){const e=JSON.parse(localStorage.getItem(GAME_SETTINGS_KEY))||{difficulty:1};difficultyMultiplier=e.difficulty,coinMultiplier=difficultyMultiplier;const t=getSanitizedPlayerProgress(),a=t.selectedShip,i=shipsData[a],s=t.shipUpgrades[a]||{};sprites.player=sprites.playerShips[a];const n={...i};"interceptor"===a?(n.damage=i.baseDamage+(s.damage||0)*i.upgrades.damage,n.shootInterval=i.baseShootInterval+(s.firerate||0)*i.upgrades.firerate):"vanguard"===a?(n.damage=i.baseDamage+(s.damage||0)*i.upgrades.damage,n.spreadAngle=.2+(s.spread||0)*i.upgrades.spread):"striker"===a&&(n.damage=i.baseDamage+(s.mainDamage||0)*i.upgrades.mainDamage,n.sideDamage=4+(s.sideDamage||0)*i.upgrades.sideDamage),n.speed=i.baseSpeed,resetGame(n)}
function resetGame(e){isGameOver=!1,score=0,level=1,activeControl="none",combo={count:0,multiplier:1,timer:0},player={x:canvas.width/2-25,y:canvas.height-100,health:e.baseHealth,maxHealth:e.baseHealth,lastShot:0,shieldExpiresAt:0,tripleShotExpiresAt:0,isFiringLaser:!1,specialMeter:0,maxSpecial:100,size:50,...e},player.hitboxWidth=.6*player.size,player.hitboxHeight=.8*player.size,companion=null,currentBackground=sprites.backgrounds[Math.floor(Math.random()*sprites.backgrounds.length)],setupPhase()}
function clearScreenOfEnemies(){entityArrays.minions=[],entityArrays.minionProjectiles=[],entityArrays.bossProjectiles=[]}
function setupPhase(){const e=document.getElementById("phase-announcement");e.textContent=`NIVEL ${level}`,e.style.display="block",setTimeout(()=>{e.style.display="none"},2500);const t=(level-1)%bosses.length,a=bosses[t];boss={...a,x:canvas.width/2-a.width/2,y:50,lastShot:0,spiralAngle:0,isPhaseTwo:!1,lastMinionSpawn:Date.now(),lastHealerSpawn:Date.now(),laserCharge:0,laserDuration:0,laserAngle:0},boss.health=(350+level*150)*difficultyMultiplier,boss.maxHealth=boss.health,boss.speed=(2+.2*t)*difficultyMultiplier,boss.shootInterval=Math.max(150,(900-100*t)/difficultyMultiplier)}
let lastTime=0;function gameLoop(e){if(isGameOver)return;const t=(e-lastTime)/1e3||0;lastTime=e,isPaused||update(t),draw(),requestAnimationFrame(gameLoop)}
// --- ESTA ES LA FUNCIÓN CLAVE (CORREGIDA) ---
function update(e){updateStars(),updatePlayerState(e),updateCompanion(),handleControls(),autoShootPlayer(),handleContinuousSpawning();if(boss.health>0){boss.isPhaseTwo||boss.health>boss.maxHealth/2||enterPhaseTwo(),moveBoss(),shootFromBoss(),boss.isPhaseTwo&&spawnMinionsForBoss(),updateBossLaser()}else if(boss.health>-1){score+=5e3*level*difficultyMultiplier,boss.health=-1,clearScreenOfEnemies(),level++,setupPhase()}updateMinionShooting(),updateEntities(),player.isFiringLaser&&updateLaser()}
function handleContinuousSpawning(){if(isPaused||boss.health<=-1)return;const e=Date.now(),t=Math.max(500,4e3/(1+level*.2)),a=Math.max(800,6e3/(1+level*.2)),i=Math.max(1e3,8e3/(1+level*.2));e-lastMinionSpawn.standard>t&&(entityArrays.minions.push(createMinion("standard",Math.random()*canvas.width,-40,"station-top")),lastMinionSpawn.standard=e),e-lastMinionSpawn.fast>a&&(entityArrays.minions.push(createMinion("fast",Math.random()*canvas.width,-40,"station-top")),lastMinionSpawn.fast=e),e-lastMinionSpawn.tank>i&&level>2&&(entityArrays.minions.push(createMinion("tank",Math.random()*canvas.width,-40,"station-top")),lastMinionSpawn.tank=e)}
function gameOver(){isGameOver=!0;const e=Math.floor(score*difficultyMultiplier),t=getSanitizedPlayerProgress();t.currency+=Math.floor(e/100),localStorage.setItem(PLAYER_PROGRESS_KEY,JSON.stringify(t));const a=JSON.parse(localStorage.getItem(INFINITE_HIGH_SCORES_KEY))||[],i=prompt("FIN DE LA PARTIDA. Ingresa tu nombre para el récord:","PILOTO")||"PILOTO";a.push({name:i,score:e}),a.sort((e,t)=>t.score-e.score),a.splice(5),localStorage.setItem(INFINITE_HIGH_SCORES_KEY,JSON.stringify(a)),document.getElementById("final-score-display").textContent=e,document.getElementById("game-over-modal").style.display="block",setTimeout(()=>{window.location.href="menu.html"},5e3)}
document.getElementById("start-mission-btn").addEventListener("click",()=>{document.getElementById("lore-modal").style.display="none",document.getElementById("special-meter-container").style.display="block",isPaused=!1,initializeGame()});function resizeCanvas(){canvas.width=window.innerWidth,canvas.height=window.innerHeight}
function createStars(){stars=[];for(let e=0;e<100;e++)stars.push({x:Math.random()*canvas.width,y:Math.random()*canvas.height,size:1.5*Math.random()+.5,speed:.5*Math.random()+.25})}
function draw(){ctx.fillStyle="#000010",ctx.fillRect(0,0,canvas.width,canvas.height),currentBackground&&ctx.drawImage(currentBackground,0,0,canvas.width,canvas.height),drawStars(),isPaused||(drawPlayer(),companion&&companion.active&&drawCompanion(),boss&&boss.health>0&&(drawBoss(),drawBossLaser()),drawProjectiles(),drawMinions(),drawExplosions(),drawPowerUps(),drawEffects(),player.isFiringLaser&&drawLaser(),drawUI())}
function updateStars(){stars.forEach(e=>{e.y+=e.speed,e.y>canvas.height&&(e.y=0,e.x=Math.random()*canvas.width)})}
function handleControls(){if(!player||"number"!=typeof player.speed)return;if("mouse"===activeControl||"touch"===activeControl)player.x=mousePos.x-player.size/2,player.y=mousePos.y-player.size/2;else if("keyboard"===activeControl){"up"===direction?player.y-=player.speed:"down"===direction?player.y+=player.speed:"left"===direction?player.x-=player.speed:"right"===direction&&(player.x+=player.speed)}player.x=Math.max(0,Math.min(canvas.width-player.size,player.x)),player.y=Math.max(0,Math.min(canvas.height-player.size,player.y))}
function autoShootPlayer(){if(player&&"number"==typeof player.shootInterval&&!player.isFiringLaser&&Date.now()-player.lastShot>player.shootInterval){playSound(sounds.shoot);const e=player.x+player.size/2;if(Date.now()<player.tripleShotExpiresAt)for(let t=-1;t<=1;t++)entityArrays.playerBullets.push({x:e,y:player.y,radius:6,speed:8,damage:player.damage,angle:.2*t,active:!0});else switch(player.firePattern){case"single":entityArrays.playerBullets.push({x:e,y:player.y,radius:6,speed:8,damage:player.damage,angle:0,active:!0});break;case"spread":for(let t=-1;t<=1;t++)entityArrays.playerBullets.push({x:e,y:player.y,radius:5,speed:7,damage:player.damage,angle:player.spreadAngle*t,active:!0});break;case"side":entityArrays.playerBullets.push({x:e,y:player.y,radius:7,speed:8,damage:player.damage,angle:0,active:!0}),entityArrays.playerBullets.push({x:player.x,y:player.y+20,radius:4,speed:6,damage:player.sideDamage,isSide:!0,direction:-1,active:!0}),entityArrays.playerBullets.push({x:player.x+player.size,y:player.y+20,radius:4,speed:6,damage:player.sideDamage,isSide:!0,direction:1,active:!0})}player.lastShot=Date.now()}}
function checkPlayerDamage(e){if(!(Date.now()<player.shieldExpiresAt)&&(player.health-=e,player.health<=0&&!isGameOver))gameOver()}
function increaseCombo(){combo.count++,combo.timer=3,combo.multiplier=1+Math.floor(combo.count/10)}
function updatePlayerState(e){combo.timer>0&&(combo.timer-=e,combo.timer<=0&&(combo.count=0,combo.multiplier=1))}
function spawnPowerUp(e,t){const a=["tripleShot","shield","health","companion"],i=a[Math.floor(Math.random()*a.length)];entityArrays.powerUps.push({x:e,y:t,type:i,size:"health"===i?64:"companion"===i?40:30,speed:2,active:!0})}
function activatePowerUp(e){switch(e){case"tripleShot":player.tripleShotExpiresAt=Date.now()+1e4;break;case"shield":player.shieldExpiresAt=Date.now()+8e3;break;case"health":player.health=Math.min(player.maxHealth,player.health+25);break;case"companion":companion={x:player.x,y:player.y,size:40,expiresAt:Date.now()+15e3,lastShot:0,shootInterval:600,damage:5,active:!0}}}
function increaseSpecialMeter(e){if(player.isFiringLaser)return;player.specialMeter=Math.min(player.maxSpecial,player.specialMeter+e),document.getElementById("special-meter-bar").style.width=`${player.specialMeter/player.maxSpecial*100}%`,player.specialMeter>=player.maxSpecial&&(document.getElementById("laserBtn").style.display="block")}
function fireLaser(){player.specialMeter>=player.maxSpecial&&!isGameOver&&!player.isFiringLaser&&(player.isFiringLaser=!0,document.getElementById("laserBtn").style.display="none",setTimeout(()=>{player.isFiringLaser=!1},3e3))}
function updateLaser(){player.specialMeter=Math.max(0,player.specialMeter-player.maxSpecial/180),document.getElementById("special-meter-bar").style.width=`${player.specialMeter/player.maxSpecial*100}%`;const e={x:player.x+player.size/2-5,y:0,width:10,height:player.y};entityArrays.minions.forEach(t=>{t.active&&e.x<t.x+t.size&&e.x+e.width>t.x&&(t.health-=2)}),boss.health>0&&e.x<boss.x+boss.width&&e.x+e.width>boss.x&&(boss.health-=2)}
function updateCompanion(){if(!companion||!companion.active)return;if(Date.now()>companion.expiresAt)return companion.active=!1,void(companion=null);const e=player.x-50,t=player.y+20;companion.x+=.1*(e-companion.x),companion.y+=.1*(t-companion.y),Date.now()-companion.lastShot>companion.shootInterval&&(playSound(sounds.shoot),entityArrays.companionBullets.push({x:companion.x+companion.size/2,y:companion.y,radius:4,speed:6,damage:companion.damage,active:!0}),companion.lastShot=Date.now())}
function enterPhaseTwo(){boss.isPhaseTwo=!0,boss.speed*=1.3,boss.shootInterval*=.8}
function moveBoss(){if(!boss||boss.health<=0)return;if(boss.laserDuration>0)return void(boss.x+=.5*(canvas.width/2-boss.width/2-boss.x));let e=player.x+player.size/2-boss.width/2;const t=e-boss.x;Math.abs(t)>boss.speed&&(boss.x+=Math.sign(t)*boss.speed),boss.x=Math.max(0,Math.min(canvas.width-boss.width,boss.x))}
function updateMinionShooting(){entityArrays.minions.forEach(e=>{"healer"!==e.type&&"kamikaze"!==e.type&&e.active&&Date.now()-e.lastShot>e.shootInterval&&(entityArrays.minionProjectiles.push({x:e.x+e.size/2,y:e.y+e.size,radius:5,speed:3*difficultyMultiplier,active:!0}),e.lastShot=Date.now())})}
function shootFromBoss(){if(!boss||boss.health<=0||Date.now()-boss.lastShot<boss.shootInterval||boss.laserDuration>0)return;boss.lastShot=Date.now();const e=boss.x+boss.width/2,t=boss.y+boss.height,a=4.5*difficultyMultiplier,i=boss.isPhaseTwo?boss.phaseTwoAttack:boss.attackPattern;switch(i){case"burst":for(let i=-1;i<=1;i++){const s=Math.atan2(player.y-t,player.x+player.size/2-e)+.25*i;entityArrays.bossProjectiles.push({x:e,y:t,radius:8,vx:Math.cos(s)*a,vy:Math.sin(s)*a,active:!0})}break;case"spiral":for(let i=0;i<8;i++){const s=boss.spiralAngle+i*(Math.PI/4);entityArrays.bossProjectiles.push({x:e,y:t,radius:6,vx:Math.cos(s)*a,vy:Math.sin(s)*a,active:!0})}boss.spiralAngle+=.2;break;case"homing":{const i=Math.atan2(player.y-t,player.x+player.size/2-e);entityArrays.bossProjectiles.push({x:e,y:t,radius:10,vx:Math.cos(i)*a,vy:Math.sin(i)*a,active:!0,homing:!0})}break;case"shotgun":for(let i=-2;i<=2;i++){const s=Math.atan2(player.y-t,player.x+player.size/2-e)+.15*i;entityArrays.bossProjectiles.push({x:e,y:t,radius:7,vx:Math.cos(s)*(a+.5),vy:Math.sin(s)*(a+.5),active:!0})}break;case"walls":for(let i=0;i<12;i++){const s=canvas.width/12*i+canvas.width/24;if(Math.floor(Date.now()/800)%3!==i%3)entityArrays.bossProjectiles.push({x:s,y:t-30,radius:8,vx:0,vy:a-.5,active:!0})}break;case"laserSweep":if(boss.laserCharge<100)break;boss.laserDuration=240,boss.laserCharge=0;break;}}
function updateBossLaser(){if(!boss.isPhaseTwo)return;const e=boss.x+boss.width/2,t=boss.y+boss.height/2;"laserSweep"===boss.phaseTwoAttack&&boss.laserCharge<100&&(boss.laserCharge+=.5);if(boss.laserDuration>0){boss.laserDuration--,boss.laserAngle=Math.PI/6*Math.sin(Date.now()/800);const a=player.x+player.size/2,i=player.y+player.size/2;if(i<t+Math.tan(boss.laserAngle)*(a-e)+10&&i>t+Math.tan(boss.laserAngle)*(a-e)-10&&i>boss.y)checkPlayerDamage(.5)}}
function spawnMinionsForBoss(){const e=Date.now();boss.minionSpawnInterval&&e-boss.lastMinionSpawn>boss.minionSpawnInterval&&(entityArrays.minions.push(createMinion("fast",0,-40,"station-top")),entityArrays.minions.push(createMinion("fast",canvas.width-30,-40,"station-top")),boss.lastMinionSpawn=e),boss.healerSpawnInterval&&e-boss.lastHealerSpawn>boss.healerSpawnInterval&&(entityArrays.minions.push(createMinion("healer",canvas.width*Math.random(),-40,"")),boss.lastHealerSpawn=e)}
function createMinion(e,t,a,i){let s={x:t,y:a,type:e,pattern:i,active:!0,lastShot:Date.now()+1e3*Math.random(),entered:!1};switch(e){case"fast":Object.assign(s,{size:25,health:20*difficultyMultiplier,speedX:4*difficultyMultiplier,shootInterval:1800});break;case"tank":Object.assign(s,{size:40,health:100*difficultyMultiplier,speedX:1*difficultyMultiplier,shootInterval:2500});break;case"healer":Object.assign(s,{size:35,health:40*difficultyMultiplier,speedX:2*difficultyMultiplier,lastHeal:Date.now(),healAmount:2*difficultyMultiplier,healInterval:1e3,isAttached:!1});break;case"kamikaze":Object.assign(s,{size:20,health:5*difficultyMultiplier,speedY:6*difficultyMultiplier});break;default:Object.assign(s,{size:30,health:30*difficultyMultiplier,speedX:2.5*difficultyMultiplier,shootInterval:2500})}s.maxHealth=s.health;switch(i){case"station-top":s.entryY=60+80*Math.random();break;case"swoop":Object.assign(s,{vx:t<canvas.width/2?4:-4,vy:2,gravity:-.05})}return s}
function updateMinionMovement(e){if("healer"===e.type){if(boss&&boss.health>0&&boss.health<boss.maxHealth){if(e.isAttached){const t=boss.x+boss.width/2,a=boss.y+boss.height/2;e.x=t+e.attachOffsetX,e.y=a+e.attachOffsetY}else{const t=boss.x+boss.width/2,a=boss.y+boss.height/2,i=Math.atan2(a-e.y,t-e.x);e.x+=Math.cos(i)*3,e.y+=Math.sin(i)*3,Math.hypot(e.x-t,e.y-a)<80&&(e.isAttached=!0,e.attachOffsetX=e.x-t,e.attachOffsetY=e.y-a)}}}else if("kamikaze"===e.type)e.y+=e.speedY;else if(e.entered){switch(e.pattern){case"station-top":e.x+=e.speedX,(e.x<=0||e.x+e.size>=canvas.width)&&(e.speedX*=-1);break;case"swoop":e.x+=e.vx,e.y+=e.vy,e.vy+=e.gravity}}else{let t=e.entryY||100;e.y<t?e.y+=3:e.entered=!0,e.y>=t&&(e.entered=!0,e.x>canvas.width/2&&"station-top"===e.pattern&&(e.speedX*=-1))}e.y>canvas.height+e.size||e.x<-50||e.x>canvas.width+50?e.active=!1:void 0}
function updateEntities(){function e(e,t){const a=t.x+t.width/2,i=t.y+t.height/2,s=e.x-a,n=e.y-i,r=Math.hypot(s,n);return r<e.radius+t.width/2}const t={x:player.x,y:player.y,width:player.hitboxWidth,height:player.hitboxHeight};entityArrays.bossProjectiles.forEach(a=>{a.homing&&(i=Math.atan2(player.y+player.size/2-a.y,player.x+player.size/2-a.x),s=4.5*difficultyMultiplier,a.vx=.98*a.vx+.02*Math.cos(i)*s,a.vy=.98*a.vy+.02*Math.sin(i)*s);var i,s;a.x+=a.vx,a.y+=a.vy,player&&e(a,t)&&(checkPlayerDamage(10),a.active=!1),a.y>canvas.height+20||a.x<-20||a.x>canvas.width+20?a.active=!1:void 0}),entityArrays.playerBullets.forEach(t=>{"isSide"in t?(t.x+=t.speed*t.direction,t.y-=.5):(t.x+=Math.sin(t.angle)*t.speed,t.y-=Math.cos(t.angle)*t.speed),t.y<-20||t.y>canvas.height||t.x<-20||t.x>canvas.width+20?t.active=!1:void 0,boss.health>0&&e(t,{x:boss.x,y:boss.y,width:boss.width,height:boss.height})&&(boss.health-=t.damage,t.active=!1,increaseSpecialMeter(.5),score+=10)}),entityArrays.minionProjectiles.forEach(a=>{a.y+=a.speed,player&&e(a,t)&&(checkPlayerDamage(5),a.active=!1),a.y>canvas.height&&(a.active=!1)}),entityArrays.explosions.forEach(e=>{e.radius+=2,e.alpha-=.05,e.alpha<=0&&(e.active=!1)}),entityArrays.effects.forEach(e=>{e.radius+=1,e.alpha-=.04,e.alpha<=0&&(e.active=!1)}),entityArrays.powerUps.forEach(e=>{e.y+=e.speed,player&&e.x<player.x+player.size&&e.x+e.size>player.x&&e.y<player.y+player.size&&e.y+e.size>player.y&&(activatePowerUp(e.type),e.active=!1),e.y>canvas.height&&(e.active=!1)}),entityArrays.minions.forEach(a=>{updateMinionMovement(a),entityArrays.playerBullets.forEach(i=>{i.active&&a.active&&e(i,{x:a.x,y:a.y,width:a.size,height:a.size})&&(a.health-=i.damage,i.active=!1,increaseSpecialMeter(1))}),"kamikaze"===a.type&&a.active&&e({x:a.x+a.size/2,y:a.y+a.size/2,radius:a.size/2},t)&&(checkPlayerDamage(15),a.active=!1),"healer"===a.type&&a.isAttached&&Date.now()-a.lastHeal>a.healInterval&&boss.health>0&&(boss.health=Math.min(boss.maxHealth,boss.health+a.healAmount),a.lastHeal=Date.now(),entityArrays.effects.push({x:a.x+a.size/2,y:a.y+a.size/2,radius:5,alpha:1,color:"rgba(0,255,100,0.8)",active:!0})),a.health<=0&&a.active&&(a.active=!1,score+=150*combo.multiplier,increaseCombo(),"healer"!==a.type&&Math.random()<.15&&spawnPowerUp(a.x,a.y))}),entityArrays.companionBullets.forEach(t=>{t.y-=t.speed,t.y<-10?t.active=!1:void 0,entityArrays.minions.forEach(a=>{a.active&&e(t,{x:a.x,y:a.y,width:a.size,height:a.size})&&(a.health-=t.damage,t.active=!1)}),boss.health>0&&e(t,{x:boss.x,y:boss.y,width:boss.width,height:boss.height})&&(boss.health-=t.damage,t.active=!1)}),Object.keys(entityArrays).forEach(e=>{entityArrays[e]=entityArrays[e].filter(e=>e.active)})}
function drawPlayer(){if(!player||isNaN(player.x))return;Date.now()<player.shieldExpiresAt&&(ctx.fillStyle="rgba(0,255,255,0.3)",ctx.beginPath(),ctx.arc(player.x+player.size/2,player.y+player.size/2,player.size/1.5,0,2*Math.PI),ctx.fill()),sprites.player&&ctx.drawImage(sprites.player,player.x,player.y,player.size,player.size);const e=player.size,t=6,a=player.health/player.maxHealth;if(isNaN(a))return;ctx.fillStyle="#333",ctx.fillRect(player.x,player.y-12,e,t),ctx.fillStyle="#00ff00",ctx.fillRect(player.x,player.y-12,e*a,t)}
function drawBoss(){if(!boss||isNaN(boss.x)||isNaN(boss.y))return;const e=boss.isPhaseTwo&&Math.floor(Date.now()/200)%2==0;e&&(ctx.filter="brightness(1.5) saturate(2)"),boss.sprite&&ctx.drawImage(boss.sprite,boss.x,boss.y,boss.width,boss.height),ctx.filter="none";const t=boss.width,a=8,i=boss.health/boss.maxHealth;if(isNaN(i))return;ctx.fillStyle="#333",ctx.fillRect(boss.x,boss.y-14,t,a),ctx.fillStyle="#ff0000",ctx.fillRect(boss.x,boss.y-14,t*i,a)}
function drawBossLaser(){if(!boss||!boss.isPhaseTwo)return;const e=boss.x+boss.width/2,t=boss.y+boss.height/2;if(boss.laserCharge>0&&boss.laserDuration<=0){ctx.fillStyle=`rgba(255,0,100,${boss.laserCharge/200})`,ctx.beginPath(),ctx.arc(e,t,boss.laserCharge/5,0,2*Math.PI),ctx.fill()}if(boss.laserDuration>0){const a=e+1e3*Math.cos(boss.laserAngle),i=t+1e3*Math.sin(boss.laserAngle);ctx.beginPath(),ctx.moveTo(e,t),ctx.lineTo(a,i),ctx.strokeStyle="rgba(255,255,255,0.8)",ctx.lineWidth=3,ctx.stroke(),ctx.strokeStyle="rgba(255,0,100,0.6)",ctx.lineWidth=15,ctx.stroke()}}
function drawProjectiles(){entityArrays.bossProjectiles.forEach(e=>{ctx.fillStyle=e.homing?"orange":"#FF00FF",ctx.beginPath(),ctx.arc(e.x,e.y,e.radius,0,2*Math.PI),ctx.fill()}),ctx.fillStyle="cyan",entityArrays.playerBullets.forEach(e=>{ctx.beginPath(),ctx.arc(e.x,e.y,e.radius,0,2*Math.PI),ctx.fill()}),ctx.fillStyle="pink",entityArrays.minionProjectiles.forEach(e=>{ctx.beginPath(),ctx.arc(e.x,e.y,e.radius,0,2*Math.PI),ctx.fill()}),ctx.fillStyle="#FFA500",entityArrays.companionBullets.forEach(e=>{ctx.beginPath(),ctx.arc(e.x,e.y,e.radius,0,2*Math.PI),ctx.fill()})}
function drawMinions(){entityArrays.minions.forEach(e=>{if(e.active){const t="healer"===e.type?sprites.healer:sprites.minion;if(t&&ctx.drawImage(t,e.x,e.y,e.size,e.size),e.health>0&&e.maxHealth){const t=e.size,a=e.health/e.maxHealth,i="healer"===e.type?"#4dff4d":"red";ctx.fillStyle="#333",ctx.fillRect(e.x,e.y-8,t,5),ctx.fillStyle=i,ctx.fillRect(e.x,e.y-8,t*a,5)}}})}
function drawExplosions(){entityArrays.explosions.forEach(e=>{ctx.fillStyle=`rgba(255,165,0,${e.alpha})`,ctx.beginPath(),ctx.arc(e.x,e.y,e.radius,0,2*Math.PI),ctx.fill()})}
function drawEffects(){entityArrays.effects.forEach(e=>{ctx.fillStyle=e.color.replace("ALPHA",e.alpha),ctx.beginPath(),ctx.arc(e.x,e.y,e.radius,0,2*Math.PI),ctx.fill()})}
function drawPowerUps(){entityArrays.powerUps.forEach(e=>{sprites.powerUps[e.type]&&ctx.drawImage(sprites.powerUps[e.type],e.x,e.y,e.size,e.size)})}
function drawCompanion(){companion&&!isNaN(companion.x)&&sprites.companionDrone&&ctx.drawImage(sprites.companionDrone,companion.x,companion.y,companion.size,companion.size)}
function drawLaser(){if(!player||isNaN(player.x))return;ctx.fillStyle="rgba(255,0,255,0.8)";ctx.fillRect(player.x+player.size/2-5,0,10,player.y);ctx.fillStyle="rgba(255,255,255,0.9)";ctx.fillRect(player.x+player.size/2-2,0,4,player.y);}
function drawStars(){ctx.fillStyle="white",stars.forEach(e=>{ctx.fillRect(e.x,e.y,e.size,e.size)})}
function drawTimerCircle(e,t,a,i,s,n,r){const l=(i/s)*2*Math.PI;ctx.beginPath(),ctx.arc(e,t,a,0,2*Math.PI),ctx.strokeStyle="rgba(255,255,255,0.3)",ctx.lineWidth=2,ctx.stroke(),ctx.beginPath(),ctx.moveTo(e,t),ctx.arc(e,t,a,-Math.PI/2,-Math.PI/2+l),ctx.closePath(),ctx.fillStyle=r,ctx.fill();if(n){const i=1.2*a;ctx.drawImage(n,e-i/2,t-i/2,i,i)}}
function drawUI(){ctx.fillStyle="white",ctx.font="18px 'Segoe UI'",ctx.textAlign="left",ctx.textBaseline="alphabetic",ctx.fillText(`Puntuación: ${Math.floor(score)}`,10,25),ctx.fillText(`Nivel: ${level}`,10,50);let e=110;const t=Date.now();t<player.shieldExpiresAt&&sprites.powerUps.shield&&(drawTimerCircle(30,e,15,player.shieldExpiresAt-t,8e3,sprites.powerUps.shield,"rgba(0,255,255,0.7)"),e+=45),t<player.tripleShotExpiresAt&&sprites.powerUps.tripleShot&&(drawTimerCircle(30,e,15,player.tripleShotExpiresAt-t,1e4,sprites.powerUps.tripleShot,"rgba(255,165,0,0.7)"),e+=45),companion&&companion.active&&sprites.powerUps.companion&&(drawTimerCircle(30,e,15,companion.expiresAt-t,15e3,sprites.powerUps.companion,"rgba(173,216,230,0.7)"),e+=45),combo.count>0&&(ctx.font="22px Arial",ctx.textAlign="center",ctx.fillStyle="rgba(255,255,255,0.5)",ctx.fillText(`${combo.count} COMBO`,canvas.width/2,canvas.height-60),ctx.font="bold 26px Arial",ctx.fillStyle="rgba(255,255,255,0.7)",ctx.fillText(`x${combo.multiplier}`,canvas.width/2,canvas.height-30))}
let direction=null;const mousePos={x:0,y:0};
canvas.addEventListener("mousemove",e=>{activeControl="mouse",mousePos.x=e.clientX,mousePos.y=e.clientY});
canvas.addEventListener("touchstart",e=>{e.preventDefault(),activeControl="touch",mousePos.x=e.touches[0].clientX,mousePos.y=e.touches[0].clientY},{passive:!1});
canvas.addEventListener("touchmove",e=>{e.preventDefault(),activeControl="touch",mousePos.x=e.touches[0].clientX,mousePos.y=e.touches[0].clientY},{passive:!1});
window.addEventListener("keydown",e=>{const t=e.key.toLowerCase();["w","s","a","d","arrowup","arrowdown","arrowleft","arrowright"].includes(t)&&(activeControl="keyboard");switch(t){case"w":case"arrowup":direction="up";break;case"s":case"arrowdown":direction="down";break;case"a":case"arrowleft":direction="left";break;case"d":case"arrowright":direction="right";break;case" ":e.preventDefault(),fireLaser()}}),window.addEventListener("keyup",e=>{const t=e.key.toLowerCase();switch(t){case"w":case"arrowup":"up"===direction&&(direction=null);break;case"s":case"arrowdown":"down"===direction&&(direction=null);break;case"a":case"arrowleft":"left"===direction&&(direction=null);break;case"d":case"arrowright":"right"===direction&&(direction=null)}}),document.getElementById("lore-title").textContent=missionData.title,document.getElementById("lore-text").textContent=missionData.lore,resizeCanvas(),createStars(),gameLoop(),window.addEventListener("resize",resizeCanvas);